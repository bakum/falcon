package falcon.entity;

import java.math.BigDecimal;

import model.PlSqlEntity;

import oracle.jbo.Key;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 19 13:12:04 EET 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrdersTabPartOplatyImpl extends PlSqlEntity {
    @Override
    protected void callInsertProcedure(TransactionEvent transactionEvent) {
        callStoredProcedure("ORDER_PKG.insert_oplata(?,?,?,?)", new Object[] { getOrderId(), getDatOpl(), getNum(),getSumm() });
    }

    @Override
    protected void callUpdateProcedure(TransactionEvent transactionEvent) {
        callStoredProcedure("ORDER_PKG.update_oplata(?,?,?,?)", new Object[] { getId(), getDatOpl(), getNum(),getSumm() });
    }

    @Override
    protected void callDeleteProcedure(TransactionEvent transactionEvent) {
        callStoredProcedure("ORDER_PKG.delete_oplata(?)", new Object[] { getId() });
    }
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(OrdersTabPartOplatyImpl obj) {
                return obj.getId();
            }

            public void put(OrdersTabPartOplatyImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrderId {
            public Object get(OrdersTabPartOplatyImpl obj) {
                return obj.getOrderId();
            }

            public void put(OrdersTabPartOplatyImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DatOpl {
            public Object get(OrdersTabPartOplatyImpl obj) {
                return obj.getDatOpl();
            }

            public void put(OrdersTabPartOplatyImpl obj, Object value) {
                obj.setDatOpl((Timestamp)value);
            }
        }
        ,
        Summ {
            public Object get(OrdersTabPartOplatyImpl obj) {
                return obj.getSumm();
            }

            public void put(OrdersTabPartOplatyImpl obj, Object value) {
                obj.setSumm((BigDecimal)value);
            }
        }
        ,
        Num {
            public Object get(OrdersTabPartOplatyImpl obj) {
                return obj.getNum();
            }

            public void put(OrdersTabPartOplatyImpl obj, Object value) {
                obj.setNum((String)value);
            }
        }
        ,
        Orders {
            public Object get(OrdersTabPartOplatyImpl obj) {
                return obj.getOrders();
            }

            public void put(OrdersTabPartOplatyImpl obj, Object value) {
                obj.setOrders((EntityImpl)value);
            }
        }
        ,
        VwOrder {
            public Object get(OrdersTabPartOplatyImpl obj) {
                return obj.getVwOrder();
            }

            public void put(OrdersTabPartOplatyImpl obj, Object value) {
                obj.setVwOrder((VwOrderImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OrdersTabPartOplatyImpl object);

        public abstract void put(OrdersTabPartOplatyImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int ORDERID = AttributesEnum.OrderId.index();
    public static final int DATOPL = AttributesEnum.DatOpl.index();
    public static final int SUMM = AttributesEnum.Summ.index();
    public static final int NUM = AttributesEnum.Num.index();
    public static final int ORDERS = AttributesEnum.Orders.index();
    public static final int VWORDER = AttributesEnum.VwOrder.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrdersTabPartOplatyImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("falcon.entity.OrdersTabPartOplaty");
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public BigDecimal getId() {
        return (BigDecimal)getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for OrderId, using the alias name OrderId.
     * @return the value of OrderId
     */
    public BigDecimal getOrderId() {
        return (BigDecimal)getAttributeInternal(ORDERID);
    }

    /**
     * Gets the attribute value for DatOpl, using the alias name DatOpl.
     * @return the value of DatOpl
     */
    public Timestamp getDatOpl() {
        return (Timestamp)getAttributeInternal(DATOPL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DatOpl.
     * @param value value to set the DatOpl
     */
    public void setDatOpl(Timestamp value) {
        setAttributeInternal(DATOPL, value);
    }

    /**
     * Gets the attribute value for Summ, using the alias name Summ.
     * @return the value of Summ
     */
    public BigDecimal getSumm() {
        return (BigDecimal)getAttributeInternal(SUMM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Summ.
     * @param value value to set the Summ
     */
    public void setSumm(BigDecimal value) {
        setAttributeInternal(SUMM, value);
    }

    /**
     * Gets the attribute value for Num, using the alias name Num.
     * @return the value of Num
     */
    public String getNum() {
        return (String)getAttributeInternal(NUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Num.
     * @param value value to set the Num
     */
    public void setNum(String value) {
        setAttributeInternal(NUM, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getOrders() {
        return (EntityImpl)getAttributeInternal(ORDERS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setOrders(EntityImpl value) {
        setAttributeInternal(ORDERS, value);
    }

    /**
     * @return the associated entity VwOrderImpl.
     */
    public VwOrderImpl getVwOrder() {
        return (VwOrderImpl)getAttributeInternal(VWORDER);
    }

    /**
     * Sets <code>value</code> as the associated entity VwOrderImpl.
     */
    public void setVwOrder(VwOrderImpl value) {
        setAttributeInternal(VWORDER, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal id) {
        return new Key(new Object[]{id});
    }


}
