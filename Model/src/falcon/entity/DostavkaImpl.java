package falcon.entity;

import java.math.BigDecimal;

import model.PlSqlEntity;

import model.UserNotDefined;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 20 14:47:04 EET 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DostavkaImpl extends PlSqlEntity {
    @Override
    protected void callInsertProcedure(TransactionEvent transactionEvent) {
        BigDecimal id = getSessionUserId();

        try {
            if (id.intValue() == 0)

                throw new UserNotDefined(id);

            else
                callStoredProcedure("DELIVER_PKG.INSERT_DELIVER(?,?,?,?)",
                                    new Object[] { id, getDat(), getIdBase(), getSumma() });
        } catch (UserNotDefined e) {
            System.out.println(e.toString());
        }
    }

    @Override
    protected void callUpdateProcedure(TransactionEvent transactionEvent) {
        BigDecimal _id = new BigDecimal(getId().getValue());
        callStoredProcedure("DELIVER_PKG.update_deliver(?,?,?,?)", new Object[] { _id, getDat(), getIdBase(), getSumma() });
    }

    @Override
    protected void callDeleteProcedure(TransactionEvent transactionEvent) {
        BigDecimal _id = new BigDecimal(getId().getValue());
        callStoredProcedure("DELIVER_PKG.DELETE_DELIVER(?)", new Object[] { _id });
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(DostavkaImpl obj) {
                return obj.getId();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        },
        SyncStr {
            public Object get(DostavkaImpl obj) {
                return obj.getSyncStr();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setSyncStr((String)value);
            }
        },
        IdBase {
            public Object get(DostavkaImpl obj) {
                return obj.getIdBase();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setIdBase((Long)value);
            }
        },
        SyncKey {
            public Object get(DostavkaImpl obj) {
                return obj.getSyncKey();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setSyncKey((Long)value);
            }
        },
        Dat {
            public Object get(DostavkaImpl obj) {
                return obj.getDat();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setDat((Timestamp)value);
            }
        },
        Num {
            public Object get(DostavkaImpl obj) {
                return obj.getNum();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setNum((String)value);
            }
        },
        Deleted {
            public Object get(DostavkaImpl obj) {
                return obj.getDeleted();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setDeleted((Long)value);
            }
        },
        Posted {
            public Object get(DostavkaImpl obj) {
                return obj.getPosted();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setPosted((Long)value);
            }
        },
        OrganisationRef {
            public Object get(DostavkaImpl obj) {
                return obj.getOrganisationRef();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setOrganisationRef((String)value);
            }
        },
        UserId {
            public Object get(DostavkaImpl obj) {
                return obj.getUserId();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setUserId((Long)value);
            }
        },
        DivisionId {
            public Object get(DostavkaImpl obj) {
                return obj.getDivisionId();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setDivisionId((Long)value);
            }
        },
        Summa {
            public Object get(DostavkaImpl obj) {
                return obj.getSumma();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setSumma((BigDecimal)value);
            }
        },
        Comments {
            public Object get(DostavkaImpl obj) {
                return obj.getComments();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setComments((String)value);
            }
        },
        CurrId {
            public Object get(DostavkaImpl obj) {
                return obj.getCurrId();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setCurrId((Long)value);
            }
        },
        Kurs {
            public Object get(DostavkaImpl obj) {
                return obj.getKurs();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setKurs((BigDecimal)value);
            }
        },
        Krantost {
            public Object get(DostavkaImpl obj) {
                return obj.getKrantost();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setKrantost((Long)value);
            }
        },
        Version {
            public Object get(DostavkaImpl obj) {
                return obj.getVersion();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setVersion((Timestamp)value);
            }
        },
        BaseOfClassification {
            public Object get(DostavkaImpl obj) {
                return obj.getBaseOfClassification();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setBaseOfClassification((EntityImpl)value);
            }
        },
        Currency {
            public Object get(DostavkaImpl obj) {
                return obj.getCurrency();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setCurrency((EntityImpl)value);
            }
        },
        Divisions {
            public Object get(DostavkaImpl obj) {
                return obj.getDivisions();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setDivisions((EntityImpl)value);
            }
        },
        DostavkaTabPartOrders {
            public Object get(DostavkaImpl obj) {
                return obj.getDostavkaTabPartOrders();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        Users {
            public Object get(DostavkaImpl obj) {
                return obj.getUsers();
            }

            public void put(DostavkaImpl obj, Object value) {
                obj.setUsers((EntityImpl)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DostavkaImpl object);

        public abstract void put(DostavkaImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ID = AttributesEnum.Id.index();
    public static final int SYNCSTR = AttributesEnum.SyncStr.index();
    public static final int IDBASE = AttributesEnum.IdBase.index();
    public static final int SYNCKEY = AttributesEnum.SyncKey.index();
    public static final int DAT = AttributesEnum.Dat.index();
    public static final int NUM = AttributesEnum.Num.index();
    public static final int DELETED = AttributesEnum.Deleted.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int ORGANISATIONREF = AttributesEnum.OrganisationRef.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int DIVISIONID = AttributesEnum.DivisionId.index();
    public static final int SUMMA = AttributesEnum.Summa.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int CURRID = AttributesEnum.CurrId.index();
    public static final int KURS = AttributesEnum.Kurs.index();
    public static final int KRANTOST = AttributesEnum.Krantost.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int BASEOFCLASSIFICATION = AttributesEnum.BaseOfClassification.index();
    public static final int CURRENCY = AttributesEnum.Currency.index();
    public static final int DIVISIONS = AttributesEnum.Divisions.index();
    public static final int DOSTAVKATABPARTORDERS = AttributesEnum.DostavkaTabPartOrders.index();
    public static final int USERS = AttributesEnum.Users.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DostavkaImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("falcon.entity.Dostavka");
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for SyncStr, using the alias name SyncStr.
     * @return the value of SyncStr
     */
    public String getSyncStr() {
        return (String)getAttributeInternal(SYNCSTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for SyncStr.
     * @param value value to set the SyncStr
     */
    public void setSyncStr(String value) {
        setAttributeInternal(SYNCSTR, value);
    }

    /**
     * Gets the attribute value for IdBase, using the alias name IdBase.
     * @return the value of IdBase
     */
    public Long getIdBase() {
        return (Long)getAttributeInternal(IDBASE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IdBase.
     * @param value value to set the IdBase
     */
    public void setIdBase(Long value) {
        setAttributeInternal(IDBASE, value);
    }

    /**
     * Gets the attribute value for SyncKey, using the alias name SyncKey.
     * @return the value of SyncKey
     */
    public Long getSyncKey() {
        return (Long)getAttributeInternal(SYNCKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SyncKey.
     * @param value value to set the SyncKey
     */
    public void setSyncKey(Long value) {
        setAttributeInternal(SYNCKEY, value);
    }

    /**
     * Gets the attribute value for Dat, using the alias name Dat.
     * @return the value of Dat
     */
    public Timestamp getDat() {
        return (Timestamp)getAttributeInternal(DAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dat.
     * @param value value to set the Dat
     */
    public void setDat(Timestamp value) {
        setAttributeInternal(DAT, value);
    }

    /**
     * Gets the attribute value for Num, using the alias name Num.
     * @return the value of Num
     */
    public String getNum() {
        return (String)getAttributeInternal(NUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Num.
     * @param value value to set the Num
     */
    public void setNum(String value) {
        setAttributeInternal(NUM, value);
    }

    /**
     * Gets the attribute value for Deleted, using the alias name Deleted.
     * @return the value of Deleted
     */
    public Long getDeleted() {
        return (Long)getAttributeInternal(DELETED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Deleted.
     * @param value value to set the Deleted
     */
    public void setDeleted(Long value) {
        setAttributeInternal(DELETED, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public Long getPosted() {
        return (Long)getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(Long value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for OrganisationRef, using the alias name OrganisationRef.
     * @return the value of OrganisationRef
     */
    public String getOrganisationRef() {
        return (String)getAttributeInternal(ORGANISATIONREF);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrganisationRef.
     * @param value value to set the OrganisationRef
     */
    public void setOrganisationRef(String value) {
        setAttributeInternal(ORGANISATIONREF, value);
    }

    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the value of UserId
     */
    public Long getUserId() {
        return (Long)getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserId.
     * @param value value to set the UserId
     */
    public void setUserId(Long value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for DivisionId, using the alias name DivisionId.
     * @return the value of DivisionId
     */
    public Long getDivisionId() {
        return (Long)getAttributeInternal(DIVISIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DivisionId.
     * @param value value to set the DivisionId
     */
    public void setDivisionId(Long value) {
        setAttributeInternal(DIVISIONID, value);
    }

    /**
     * Gets the attribute value for Summa, using the alias name Summa.
     * @return the value of Summa
     */
    public BigDecimal getSumma() {
        return (BigDecimal)getAttributeInternal(SUMMA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Summa.
     * @param value value to set the Summa
     */
    public void setSumma(BigDecimal value) {
        setAttributeInternal(SUMMA, value);
    }

    /**
     * Gets the attribute value for Comments, using the alias name Comments.
     * @return the value of Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comments.
     * @param value value to set the Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for CurrId, using the alias name CurrId.
     * @return the value of CurrId
     */
    public Long getCurrId() {
        return (Long)getAttributeInternal(CURRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrId.
     * @param value value to set the CurrId
     */
    public void setCurrId(Long value) {
        setAttributeInternal(CURRID, value);
    }

    /**
     * Gets the attribute value for Kurs, using the alias name Kurs.
     * @return the value of Kurs
     */
    public BigDecimal getKurs() {
        return (BigDecimal)getAttributeInternal(KURS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Kurs.
     * @param value value to set the Kurs
     */
    public void setKurs(BigDecimal value) {
        setAttributeInternal(KURS, value);
    }

    /**
     * Gets the attribute value for Krantost, using the alias name Krantost.
     * @return the value of Krantost
     */
    public Long getKrantost() {
        return (Long)getAttributeInternal(KRANTOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Krantost.
     * @param value value to set the Krantost
     */
    public void setKrantost(Long value) {
        setAttributeInternal(KRANTOST, value);
    }

    /**
     * Gets the attribute value for Version, using the alias name Version.
     * @return the value of Version
     */
    public Timestamp getVersion() {
        return (Timestamp)getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Version.
     * @param value value to set the Version
     */
    public void setVersion(Timestamp value) {
        setAttributeInternal(VERSION, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getBaseOfClassification() {
        return (EntityImpl)getAttributeInternal(BASEOFCLASSIFICATION);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setBaseOfClassification(EntityImpl value) {
        setAttributeInternal(BASEOFCLASSIFICATION, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getCurrency() {
        return (EntityImpl)getAttributeInternal(CURRENCY);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCurrency(EntityImpl value) {
        setAttributeInternal(CURRENCY, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDivisions() {
        return (EntityImpl)getAttributeInternal(DIVISIONS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDivisions(EntityImpl value) {
        setAttributeInternal(DIVISIONS, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getDostavkaTabPartOrders() {
        return (RowIterator)getAttributeInternal(DOSTAVKATABPARTORDERS);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getUsers() {
        return (EntityImpl)getAttributeInternal(USERS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setUsers(EntityImpl value) {
        setAttributeInternal(USERS, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[] { id });
    }


}
