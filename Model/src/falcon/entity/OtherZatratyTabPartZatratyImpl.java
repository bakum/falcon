package falcon.entity;

import java.math.BigDecimal;

import model.PlSqlEntity;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 22 13:59:35 EET 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OtherZatratyTabPartZatratyImpl extends PlSqlEntity {
    @Override
    protected void callInsertProcedure(TransactionEvent transactionEvent) {
        //int oid = getOthId().intValue();
        callStoredProcedure("otherzatr_pkg.insert_otherzatr_tab_part(?,?,?)",
                            new Object[] { getZatrId(), getOthId(), getSumma() });
    }

    @Override
    protected void callUpdateProcedure(TransactionEvent transactionEvent) {
        callStoredProcedure("otherzatr_pkg.update_otherzatr_tab_part(?,?,?)",
                            new Object[] { getId(), getZatrId(), getSumma() });
    }

    @Override
    protected void callDeleteProcedure(TransactionEvent transactionEvent) {
        callStoredProcedure("otherzatr_pkg.delete_otherzatr_tab_part(?)", new Object[] { getId() });
    }

    public void postChanges(TransactionEvent transactionEvent) {
        if (this.getPostState() == STATUS_NEW ||
                this.getPostState() == STATUS_MODIFIED) {
                OtherZatratyImpl zatraty = this.getOtherZatraty();
                if (zatraty != null) {
                    zatraty.postChanges(transactionEvent);
                }
                
            }
        super.postChanges(transactionEvent);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(OtherZatratyTabPartZatratyImpl obj) {
                return obj.getId();
            }

            public void put(OtherZatratyTabPartZatratyImpl obj, Object value) {
                obj.setId((Long)value);
            }
        },
        OthId {
            public Object get(OtherZatratyTabPartZatratyImpl obj) {
                return obj.getOthId();
            }

            public void put(OtherZatratyTabPartZatratyImpl obj, Object value) {
                obj.setOthId((Long)value);
            }
        },
        ZatrId {
            public Object get(OtherZatratyTabPartZatratyImpl obj) {
                return obj.getZatrId();
            }

            public void put(OtherZatratyTabPartZatratyImpl obj, Object value) {
                obj.setZatrId((Long)value);
            }
        },
        Summa {
            public Object get(OtherZatratyTabPartZatratyImpl obj) {
                return obj.getSumma();
            }

            public void put(OtherZatratyTabPartZatratyImpl obj, Object value) {
                obj.setSumma((BigDecimal)value);
            }
        },
        OtherZatraty {
            public Object get(OtherZatratyTabPartZatratyImpl obj) {
                return obj.getOtherZatraty();
            }

            public void put(OtherZatratyTabPartZatratyImpl obj, Object value) {
                obj.setOtherZatraty((OtherZatratyImpl)value);
            }
        },
        Zatraty {
            public Object get(OtherZatratyTabPartZatratyImpl obj) {
                return obj.getZatraty();
            }

            public void put(OtherZatratyTabPartZatratyImpl obj, Object value) {
                obj.setZatraty((EntityImpl)value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OtherZatratyTabPartZatratyImpl object);

        public abstract void put(OtherZatratyTabPartZatratyImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int OTHID = AttributesEnum.OthId.index();
    public static final int ZATRID = AttributesEnum.ZatrId.index();
    public static final int SUMMA = AttributesEnum.Summa.index();
    public static final int OTHERZATRATY = AttributesEnum.OtherZatraty.index();
    public static final int ZATRATY = AttributesEnum.Zatraty.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OtherZatratyTabPartZatratyImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("falcon.entity.OtherZatratyTabPartZatraty");
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the value of Id
     */
    public Long getId() {
        return (Long)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Id.
     * @param value value to set the Id
     */
    public void setId(Long value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for OthId, using the alias name OthId.
     * @return the value of OthId
     */
    public Long getOthId() {
        return (Long)getAttributeInternal(OTHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OthId.
     * @param value value to set the OthId
     */
    public void setOthId(Long value) {
        setAttributeInternal(OTHID, value);
    }

    /**
     * Gets the attribute value for ZatrId, using the alias name ZatrId.
     * @return the value of ZatrId
     */
    public Long getZatrId() {
        return (Long)getAttributeInternal(ZATRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ZatrId.
     * @param value value to set the ZatrId
     */
    public void setZatrId(Long value) {
        setAttributeInternal(ZATRID, value);
    }

    /**
     * Gets the attribute value for Summa, using the alias name Summa.
     * @return the value of Summa
     */
    public BigDecimal getSumma() {
        return (BigDecimal)getAttributeInternal(SUMMA);
    }

    /**
     * Sets <code>value</code> as the attribute value for Summa.
     * @param value value to set the Summa
     */
    public void setSumma(BigDecimal value) {
        setAttributeInternal(SUMMA, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity OtherZatratyImpl.
     */
    public OtherZatratyImpl getOtherZatraty() {
        return (OtherZatratyImpl)getAttributeInternal(OTHERZATRATY);
    }

    /**
     * Sets <code>value</code> as the associated entity OtherZatratyImpl.
     */
    public void setOtherZatraty(OtherZatratyImpl value) {
        setAttributeInternal(OTHERZATRATY, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getZatraty() {
        return (EntityImpl)getAttributeInternal(ZATRATY);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setZatraty(EntityImpl value) {
        setAttributeInternal(ZATRATY, value);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Long id) {
        return new Key(new Object[] { id });
    }


}
