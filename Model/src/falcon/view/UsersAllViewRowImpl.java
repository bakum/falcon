package falcon.view;

import java.math.BigDecimal;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 13 18:28:20 EET 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UsersAllViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_USERS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getId();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setId((BigDecimal)value);
            }
        }
        ,
        Fullname {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getFullname();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setFullname((String)value);
            }
        }
        ,
        IsGroup {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getIsGroup();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setIsGroup((BigDecimal)value);
            }
        }
        ,
        ParentId {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getParentId();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setParentId((BigDecimal)value);
            }
        }
        ,
        RoleId {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getRoleId();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setRoleId((BigDecimal)value);
            }
        }
        ,
        UuidIb {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getUuidIb();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setUuidIb((String)value);
            }
        }
        ,
        SyncStr {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getSyncStr();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setSyncStr((String)value);
            }
        }
        ,
        SyncKey {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getSyncKey();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setSyncKey((Integer)value);
            }
        }
        ,
        NotActive {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getNotActive();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setNotActive((Integer)value);
            }
        }
        ,
        Deleted {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getDeleted();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setDeleted((Integer)value);
            }
        }
        ,
        Password {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getPassword();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setPassword((String)value);
            }
        }
        ,
        RealName {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getRealName();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setRealName((String)value);
            }
        }
        ,
        IsAdmin {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getIsAdmin();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setIsAdmin((Integer)value);
            }
        }
        ,
        Version {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getVersion();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setVersion((Timestamp)value);
            }
        }
        ,
        NotActiveBoolean {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getNotActiveBoolean();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setNotActiveBoolean((Boolean)value);
            }
        }
        ,
        IsAdminBoolean {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getIsAdminBoolean();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setIsAdminBoolean((Boolean)value);
            }
        }
        ,
        OplataIschodView {
            public Object get(UsersAllViewRowImpl obj) {
                return obj.getOplataIschodView();
            }

            public void put(UsersAllViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(UsersAllViewRowImpl object);

        public abstract void put(UsersAllViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int FULLNAME = AttributesEnum.Fullname.index();
    public static final int ISGROUP = AttributesEnum.IsGroup.index();
    public static final int PARENTID = AttributesEnum.ParentId.index();
    public static final int ROLEID = AttributesEnum.RoleId.index();
    public static final int UUIDIB = AttributesEnum.UuidIb.index();
    public static final int SYNCSTR = AttributesEnum.SyncStr.index();
    public static final int SYNCKEY = AttributesEnum.SyncKey.index();
    public static final int NOTACTIVE = AttributesEnum.NotActive.index();
    public static final int DELETED = AttributesEnum.Deleted.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int REALNAME = AttributesEnum.RealName.index();
    public static final int ISADMIN = AttributesEnum.IsAdmin.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int NOTACTIVEBOOLEAN = AttributesEnum.NotActiveBoolean.index();
    public static final int ISADMINBOOLEAN = AttributesEnum.IsAdminBoolean.index();
    public static final int OPLATAISCHODVIEW = AttributesEnum.OplataIschodView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UsersAllViewRowImpl() {
    }

    /**
     * Gets Users entity object.
     * @return the Users
     */
    public EntityImpl getUsers() {
        return (EntityImpl)getEntity(ENTITY_USERS);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public BigDecimal getId() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for FULLNAME using the alias name Fullname.
     * @return the FULLNAME
     */
    public String getFullname() {
        return (String) getAttributeInternal(FULLNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FULLNAME using the alias name Fullname.
     * @param value value to set the FULLNAME
     */
    public void setFullname(String value) {
        setAttributeInternal(FULLNAME, value);
    }

    /**
     * Gets the attribute value for IS_GROUP using the alias name IsGroup.
     * @return the IS_GROUP
     */
    public BigDecimal getIsGroup() {
        return (BigDecimal) getAttributeInternal(ISGROUP);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_GROUP using the alias name IsGroup.
     * @param value value to set the IS_GROUP
     */
    public void setIsGroup(BigDecimal value) {
        setAttributeInternal(ISGROUP, value);
    }

    /**
     * Gets the attribute value for PARENT_ID using the alias name ParentId.
     * @return the PARENT_ID
     */
    public BigDecimal getParentId() {
        return (BigDecimal) getAttributeInternal(PARENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARENT_ID using the alias name ParentId.
     * @param value value to set the PARENT_ID
     */
    public void setParentId(BigDecimal value) {
        setAttributeInternal(PARENTID, value);
    }

    /**
     * Gets the attribute value for ROLE_ID using the alias name RoleId.
     * @return the ROLE_ID
     */
    public BigDecimal getRoleId() {
        return (BigDecimal) getAttributeInternal(ROLEID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROLE_ID using the alias name RoleId.
     * @param value value to set the ROLE_ID
     */
    public void setRoleId(BigDecimal value) {
        setAttributeInternal(ROLEID, value);
    }

    /**
     * Gets the attribute value for UUID_IB using the alias name UuidIb.
     * @return the UUID_IB
     */
    public String getUuidIb() {
        return (String) getAttributeInternal(UUIDIB);
    }

    /**
     * Sets <code>value</code> as attribute value for UUID_IB using the alias name UuidIb.
     * @param value value to set the UUID_IB
     */
    public void setUuidIb(String value) {
        setAttributeInternal(UUIDIB, value);
    }

    /**
     * Gets the attribute value for SYNC_STR using the alias name SyncStr.
     * @return the SYNC_STR
     */
    public String getSyncStr() {
        return (String) getAttributeInternal(SYNCSTR);
    }

    /**
     * Sets <code>value</code> as attribute value for SYNC_STR using the alias name SyncStr.
     * @param value value to set the SYNC_STR
     */
    public void setSyncStr(String value) {
        setAttributeInternal(SYNCSTR, value);
    }

    /**
     * Gets the attribute value for SYNC_KEY using the alias name SyncKey.
     * @return the SYNC_KEY
     */
    public Integer getSyncKey() {
        return (Integer) getAttributeInternal(SYNCKEY);
    }

    /**
     * Sets <code>value</code> as attribute value for SYNC_KEY using the alias name SyncKey.
     * @param value value to set the SYNC_KEY
     */
    public void setSyncKey(Integer value) {
        setAttributeInternal(SYNCKEY, value);
    }

    /**
     * Gets the attribute value for NOT_ACTIVE using the alias name NotActive.
     * @return the NOT_ACTIVE
     */
    public Integer getNotActive() {
        return (Integer) getAttributeInternal(NOTACTIVE);
    }

    /**
     * Sets <code>value</code> as attribute value for NOT_ACTIVE using the alias name NotActive.
     * @param value value to set the NOT_ACTIVE
     */
    public void setNotActive(Integer value) {
        setAttributeInternal(NOTACTIVE, value);
    }

    /**
     * Gets the attribute value for DELETED using the alias name Deleted.
     * @return the DELETED
     */
    public Integer getDeleted() {
        return (Integer) getAttributeInternal(DELETED);
    }

    /**
     * Sets <code>value</code> as attribute value for DELETED using the alias name Deleted.
     * @param value value to set the DELETED
     */
    public void setDeleted(Integer value) {
        setAttributeInternal(DELETED, value);
    }

    /**
     * Gets the attribute value for PASSWORD using the alias name Password.
     * @return the PASSWORD
     */
    public String getPassword() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD using the alias name Password.
     * @param value value to set the PASSWORD
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for REAL_NAME using the alias name RealName.
     * @return the REAL_NAME
     */
    public String getRealName() {
        return (String) getAttributeInternal(REALNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for REAL_NAME using the alias name RealName.
     * @param value value to set the REAL_NAME
     */
    public void setRealName(String value) {
        setAttributeInternal(REALNAME, value);
    }

    /**
     * Gets the attribute value for IS_ADMIN using the alias name IsAdmin.
     * @return the IS_ADMIN
     */
    public Integer getIsAdmin() {
        return (Integer) getAttributeInternal(ISADMIN);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_ADMIN using the alias name IsAdmin.
     * @param value value to set the IS_ADMIN
     */
    public void setIsAdmin(Integer value) {
        setAttributeInternal(ISADMIN, value);
    }

    /**
     * Gets the attribute value for VERSION using the alias name Version.
     * @return the VERSION
     */
    public Timestamp getVersion() {
        return (Timestamp) getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as attribute value for VERSION using the alias name Version.
     * @param value value to set the VERSION
     */
    public void setVersion(Timestamp value) {
        setAttributeInternal(VERSION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NotActiveBoolean.
     * @return the NotActiveBoolean
     */
    public Boolean getNotActiveBoolean() {
        //return (Boolean) getAttributeInternal(NOTACTIVEBOOLEAN);
        if (this.getNotActive()==1)
            return true;
        else
            return false;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NotActiveBoolean.
     * @param value value to set the  NotActiveBoolean
     */
    public void setNotActiveBoolean(Boolean value) {
        //setAttributeInternal(NOTACTIVEBOOLEAN, value);
        if (value)
            setNotActive(1);
        else
            setNotActive(0);
    }

    /**
     * Gets the attribute value for the calculated attribute IsAdminBoolean.
     * @return the IsAdminBoolean
     */
    public Boolean getIsAdminBoolean() {
       // return (Boolean) getAttributeInternal(ISADMINBOOLEAN);
        if (this.getIsAdmin()==1)
            return true;
        else
            return false;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IsAdminBoolean.
     * @param value value to set the  IsAdminBoolean
     */
    public void setIsAdminBoolean(Boolean value) {
        //setAttributeInternal(ISADMINBOOLEAN, value);
        if (value)
            setIsAdmin(1);
        else
            setIsAdmin(0);
            
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OplataIschodView.
     */
    public RowIterator getOplataIschodView() {
        return (RowIterator)getAttributeInternal(OPLATAISCHODVIEW);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
